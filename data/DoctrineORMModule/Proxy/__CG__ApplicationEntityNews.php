<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class News extends \Application\Entity\News implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsId', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsTitle', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsContent', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsDate', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsEditDate', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsSource', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsPublished', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsAuthor');
        }

        return array('__isInitialized__', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsId', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsTitle', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsContent', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsDate', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsEditDate', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsSource', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsPublished', '' . "\0" . 'Application\\Entity\\News' . "\0" . 'newsAuthor');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (News $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getNewsId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getNewsId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsId', array());

        return parent::getNewsId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsTitle', array());

        return parent::getNewsTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsContent', array());

        return parent::getNewsContent();
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsDate', array());

        return parent::getNewsDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsEditDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsEditDate', array());

        return parent::getNewsEditDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsSource', array());

        return parent::getNewsSource();
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsPublished', array());

        return parent::getNewsPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsAuthor', array());

        return parent::getNewsAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setNewsId($newsId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewsId', array($newsId));

        return parent::setNewsId($newsId);
    }

    /**
     * {@inheritDoc}
     */
    public function setNewsTitle($newsTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewsTitle', array($newsTitle));

        return parent::setNewsTitle($newsTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function setNewsContent($newsContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewsContent', array($newsContent));

        return parent::setNewsContent($newsContent);
    }

    /**
     * {@inheritDoc}
     */
    public function setNewsDate($newsDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewsDate', array($newsDate));

        return parent::setNewsDate($newsDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setNewsEditDate($newsEditDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewsEditDate', array($newsEditDate));

        return parent::setNewsEditDate($newsEditDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setNewsSource($newsSource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewsSource', array($newsSource));

        return parent::setNewsSource($newsSource);
    }

    /**
     * {@inheritDoc}
     */
    public function setNewsPublished($newsPublished)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewsPublished', array($newsPublished));

        return parent::setNewsPublished($newsPublished);
    }

    /**
     * {@inheritDoc}
     */
    public function setNewsAuthor($newsAuthor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewsAuthor', array($newsAuthor));

        return parent::setNewsAuthor($newsAuthor);
    }

}
